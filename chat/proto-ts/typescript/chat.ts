/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 5.27.2
 * source: chat.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from './google/protobuf/wrappers';
import * as dependency_2 from './google/protobuf/timestamp';
import * as pb_1 from 'google-protobuf';
import * as grpc_1 from '@grpc/grpc-js';
export namespace kyle_chat {
  export class TestMsg extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(
      data?:
        | any[]
        | {
            id?: number;
          },
    ) {
      super();
      pb_1.Message.initialize(
        this,
        Array.isArray(data) ? data : [],
        0,
        -1,
        [],
        this.#one_of_decls,
      );
      if (!Array.isArray(data) && typeof data == 'object') {
        if ('id' in data && data.id != undefined) {
          this.id = data.id;
        }
      }
    }
    get id() {
      return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
    }
    set id(value: number) {
      pb_1.Message.setField(this, 1, value);
    }
    static fromObject(data: { id?: number }): TestMsg {
      const message = new TestMsg({});
      if (data.id != null) {
        message.id = data.id;
      }
      return message;
    }
    toObject() {
      const data: {
        id?: number;
      } = {};
      if (this.id != null) {
        data.id = this.id;
      }
      return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
      const writer = w || new pb_1.BinaryWriter();
      if (this.id != 0) writer.writeUint64(1, this.id);
      if (!w) return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): TestMsg {
      const reader =
          bytes instanceof pb_1.BinaryReader
            ? bytes
            : new pb_1.BinaryReader(bytes),
        message = new TestMsg();
      while (reader.nextField()) {
        if (reader.isEndGroup()) break;
        switch (reader.getFieldNumber()) {
          case 1:
            message.id = reader.readUint64();
            break;
          default:
            reader.skipField();
        }
      }
      return message;
    }
    serializeBinary(): Uint8Array {
      return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): TestMsg {
      return TestMsg.deserialize(bytes);
    }
  }
  export class ChatMsg extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(
      data?:
        | any[]
        | {
            id?: number;
            user_id?: string;
            text?: string;
            event_time?: dependency_2.google.protobuf.Timestamp;
          },
    ) {
      super();
      pb_1.Message.initialize(
        this,
        Array.isArray(data) ? data : [],
        0,
        -1,
        [],
        this.#one_of_decls,
      );
      if (!Array.isArray(data) && typeof data == 'object') {
        if ('id' in data && data.id != undefined) {
          this.id = data.id;
        }
        if ('user_id' in data && data.user_id != undefined) {
          this.user_id = data.user_id;
        }
        if ('text' in data && data.text != undefined) {
          this.text = data.text;
        }
        if ('event_time' in data && data.event_time != undefined) {
          this.event_time = data.event_time;
        }
      }
    }
    get id() {
      return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
    }
    set id(value: number) {
      pb_1.Message.setField(this, 1, value);
    }
    get user_id() {
      return pb_1.Message.getFieldWithDefault(this, 2, '') as string;
    }
    set user_id(value: string) {
      pb_1.Message.setField(this, 2, value);
    }
    get text() {
      return pb_1.Message.getFieldWithDefault(this, 3, '') as string;
    }
    set text(value: string) {
      pb_1.Message.setField(this, 3, value);
    }
    get event_time() {
      return pb_1.Message.getWrapperField(
        this,
        dependency_2.google.protobuf.Timestamp,
        4,
      ) as dependency_2.google.protobuf.Timestamp;
    }
    set event_time(value: dependency_2.google.protobuf.Timestamp) {
      pb_1.Message.setWrapperField(this, 4, value);
    }
    get has_event_time() {
      return pb_1.Message.getField(this, 4) != null;
    }
    static fromObject(data: {
      id?: number;
      user_id?: string;
      text?: string;
      event_time?: ReturnType<
        typeof dependency_2.google.protobuf.Timestamp.prototype.toObject
      >;
    }): ChatMsg {
      const message = new ChatMsg({});
      if (data.id != null) {
        message.id = data.id;
      }
      if (data.user_id != null) {
        message.user_id = data.user_id;
      }
      if (data.text != null) {
        message.text = data.text;
      }
      if (data.event_time != null) {
        message.event_time = dependency_2.google.protobuf.Timestamp.fromObject(
          data.event_time,
        );
      }
      return message;
    }
    toObject() {
      const data: {
        id?: number;
        user_id?: string;
        text?: string;
        event_time?: ReturnType<
          typeof dependency_2.google.protobuf.Timestamp.prototype.toObject
        >;
      } = {};
      if (this.id != null) {
        data.id = this.id;
      }
      if (this.user_id != null) {
        data.user_id = this.user_id;
      }
      if (this.text != null) {
        data.text = this.text;
      }
      if (this.event_time != null) {
        data.event_time = this.event_time.toObject();
      }
      return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
      const writer = w || new pb_1.BinaryWriter();
      if (this.id != 0) writer.writeUint64(1, this.id);
      if (this.user_id.length) writer.writeString(2, this.user_id);
      if (this.text.length) writer.writeString(3, this.text);
      if (this.has_event_time)
        writer.writeMessage(4, this.event_time, () =>
          this.event_time.serialize(writer),
        );
      if (!w) return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ChatMsg {
      const reader =
          bytes instanceof pb_1.BinaryReader
            ? bytes
            : new pb_1.BinaryReader(bytes),
        message = new ChatMsg();
      while (reader.nextField()) {
        if (reader.isEndGroup()) break;
        switch (reader.getFieldNumber()) {
          case 1:
            message.id = reader.readUint64();
            break;
          case 2:
            message.user_id = reader.readString();
            break;
          case 3:
            message.text = reader.readString();
            break;
          case 4:
            reader.readMessage(
              message.event_time,
              () =>
                (message.event_time =
                  dependency_2.google.protobuf.Timestamp.deserialize(reader)),
            );
            break;
          default:
            reader.skipField();
        }
      }
      return message;
    }
    serializeBinary(): Uint8Array {
      return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): ChatMsg {
      return ChatMsg.deserialize(bytes);
    }
  }
  export class GetTestMsg extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(
      data?:
        | any[]
        | {
            id?: number;
          },
    ) {
      super();
      pb_1.Message.initialize(
        this,
        Array.isArray(data) ? data : [],
        0,
        -1,
        [],
        this.#one_of_decls,
      );
      if (!Array.isArray(data) && typeof data == 'object') {
        if ('id' in data && data.id != undefined) {
          this.id = data.id;
        }
      }
    }
    get id() {
      return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
    }
    set id(value: number) {
      pb_1.Message.setField(this, 1, value);
    }
    static fromObject(data: { id?: number }): GetTestMsg {
      const message = new GetTestMsg({});
      if (data.id != null) {
        message.id = data.id;
      }
      return message;
    }
    toObject() {
      const data: {
        id?: number;
      } = {};
      if (this.id != null) {
        data.id = this.id;
      }
      return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
      const writer = w || new pb_1.BinaryWriter();
      if (this.id != 0) writer.writeUint64(1, this.id);
      if (!w) return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GetTestMsg {
      const reader =
          bytes instanceof pb_1.BinaryReader
            ? bytes
            : new pb_1.BinaryReader(bytes),
        message = new GetTestMsg();
      while (reader.nextField()) {
        if (reader.isEndGroup()) break;
        switch (reader.getFieldNumber()) {
          case 1:
            message.id = reader.readUint64();
            break;
          default:
            reader.skipField();
        }
      }
      return message;
    }
    serializeBinary(): Uint8Array {
      return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): GetTestMsg {
      return GetTestMsg.deserialize(bytes);
    }
  }
  export class GetChatMsg extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(
      data?:
        | any[]
        | {
            id?: number;
            user_id?: string;
            event_time?: dependency_2.google.protobuf.Timestamp;
          },
    ) {
      super();
      pb_1.Message.initialize(
        this,
        Array.isArray(data) ? data : [],
        0,
        -1,
        [],
        this.#one_of_decls,
      );
      if (!Array.isArray(data) && typeof data == 'object') {
        if ('id' in data && data.id != undefined) {
          this.id = data.id;
        }
        if ('user_id' in data && data.user_id != undefined) {
          this.user_id = data.user_id;
        }
        if ('event_time' in data && data.event_time != undefined) {
          this.event_time = data.event_time;
        }
      }
    }
    get id() {
      return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
    }
    set id(value: number) {
      pb_1.Message.setField(this, 1, value);
    }
    get user_id() {
      return pb_1.Message.getFieldWithDefault(this, 2, '') as string;
    }
    set user_id(value: string) {
      pb_1.Message.setField(this, 2, value);
    }
    get event_time() {
      return pb_1.Message.getWrapperField(
        this,
        dependency_2.google.protobuf.Timestamp,
        4,
      ) as dependency_2.google.protobuf.Timestamp;
    }
    set event_time(value: dependency_2.google.protobuf.Timestamp) {
      pb_1.Message.setWrapperField(this, 4, value);
    }
    get has_event_time() {
      return pb_1.Message.getField(this, 4) != null;
    }
    static fromObject(data: {
      id?: number;
      user_id?: string;
      event_time?: ReturnType<
        typeof dependency_2.google.protobuf.Timestamp.prototype.toObject
      >;
    }): GetChatMsg {
      const message = new GetChatMsg({});
      if (data.id != null) {
        message.id = data.id;
      }
      if (data.user_id != null) {
        message.user_id = data.user_id;
      }
      if (data.event_time != null) {
        message.event_time = dependency_2.google.protobuf.Timestamp.fromObject(
          data.event_time,
        );
      }
      return message;
    }
    toObject() {
      const data: {
        id?: number;
        user_id?: string;
        event_time?: ReturnType<
          typeof dependency_2.google.protobuf.Timestamp.prototype.toObject
        >;
      } = {};
      if (this.id != null) {
        data.id = this.id;
      }
      if (this.user_id != null) {
        data.user_id = this.user_id;
      }
      if (this.event_time != null) {
        data.event_time = this.event_time.toObject();
      }
      return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
      const writer = w || new pb_1.BinaryWriter();
      if (this.id != 0) writer.writeUint64(1, this.id);
      if (this.user_id.length) writer.writeString(2, this.user_id);
      if (this.has_event_time)
        writer.writeMessage(4, this.event_time, () =>
          this.event_time.serialize(writer),
        );
      if (!w) return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GetChatMsg {
      const reader =
          bytes instanceof pb_1.BinaryReader
            ? bytes
            : new pb_1.BinaryReader(bytes),
        message = new GetChatMsg();
      while (reader.nextField()) {
        if (reader.isEndGroup()) break;
        switch (reader.getFieldNumber()) {
          case 1:
            message.id = reader.readUint64();
            break;
          case 2:
            message.user_id = reader.readString();
            break;
          case 4:
            reader.readMessage(
              message.event_time,
              () =>
                (message.event_time =
                  dependency_2.google.protobuf.Timestamp.deserialize(reader)),
            );
            break;
          default:
            reader.skipField();
        }
      }
      return message;
    }
    serializeBinary(): Uint8Array {
      return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): GetChatMsg {
      return GetChatMsg.deserialize(bytes);
    }
  }
  interface GrpcUnaryServiceInterface<P, R> {
    (
      message: P,
      metadata: grpc_1.Metadata,
      options: grpc_1.CallOptions,
      callback: grpc_1.requestCallback<R>,
    ): grpc_1.ClientUnaryCall;
    (
      message: P,
      metadata: grpc_1.Metadata,
      callback: grpc_1.requestCallback<R>,
    ): grpc_1.ClientUnaryCall;
    (
      message: P,
      options: grpc_1.CallOptions,
      callback: grpc_1.requestCallback<R>,
    ): grpc_1.ClientUnaryCall;
    (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
  }
  interface GrpcStreamServiceInterface<P, R> {
    (
      message: P,
      metadata: grpc_1.Metadata,
      options?: grpc_1.CallOptions,
    ): grpc_1.ClientReadableStream<R>;
    (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
  }
  interface GrpWritableServiceInterface<P, R> {
    (
      metadata: grpc_1.Metadata,
      options: grpc_1.CallOptions,
      callback: grpc_1.requestCallback<R>,
    ): grpc_1.ClientWritableStream<P>;
    (
      metadata: grpc_1.Metadata,
      callback: grpc_1.requestCallback<R>,
    ): grpc_1.ClientWritableStream<P>;
    (
      options: grpc_1.CallOptions,
      callback: grpc_1.requestCallback<R>,
    ): grpc_1.ClientWritableStream<P>;
    (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
  }
  interface GrpcChunkServiceInterface<P, R> {
    (
      metadata: grpc_1.Metadata,
      options?: grpc_1.CallOptions,
    ): grpc_1.ClientDuplexStream<P, R>;
    (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
  }
  interface GrpcPromiseServiceInterface<P, R> {
    (
      message: P,
      metadata: grpc_1.Metadata,
      options?: grpc_1.CallOptions,
    ): Promise<R>;
    (message: P, options?: grpc_1.CallOptions): Promise<R>;
  }
  export abstract class UnimplementedChatService {
    static definition = {
      SendMsgTest: {
        path: '/kyle_chat.Chat/SendMsgTest',
        requestStream: false,
        responseStream: false,
        requestSerialize: (message: TestMsg) =>
          Buffer.from(message.serialize()),
        requestDeserialize: (bytes: Buffer) =>
          TestMsg.deserialize(new Uint8Array(bytes)),
        responseSerialize: (
          message: dependency_1.google.protobuf.StringValue,
        ) => Buffer.from(message.serialize()),
        responseDeserialize: (bytes: Buffer) =>
          dependency_1.google.protobuf.StringValue.deserialize(
            new Uint8Array(bytes),
          ),
      },
      SendMsg: {
        path: '/kyle_chat.Chat/SendMsg',
        requestStream: false,
        responseStream: false,
        requestSerialize: (message: ChatMsg) =>
          Buffer.from(message.serialize()),
        requestDeserialize: (bytes: Buffer) =>
          ChatMsg.deserialize(new Uint8Array(bytes)),
        responseSerialize: (
          message: dependency_1.google.protobuf.StringValue,
        ) => Buffer.from(message.serialize()),
        responseDeserialize: (bytes: Buffer) =>
          dependency_1.google.protobuf.StringValue.deserialize(
            new Uint8Array(bytes),
          ),
      },
      GetMsgTest: {
        path: '/kyle_chat.Chat/GetMsgTest',
        requestStream: false,
        responseStream: false,
        requestSerialize: (message: GetTestMsg) =>
          Buffer.from(message.serialize()),
        requestDeserialize: (bytes: Buffer) =>
          GetTestMsg.deserialize(new Uint8Array(bytes)),
        responseSerialize: (message: TestMsg) =>
          Buffer.from(message.serialize()),
        responseDeserialize: (bytes: Buffer) =>
          TestMsg.deserialize(new Uint8Array(bytes)),
      },
      GetMsg: {
        path: '/kyle_chat.Chat/GetMsg',
        requestStream: false,
        responseStream: false,
        requestSerialize: (message: GetChatMsg) =>
          Buffer.from(message.serialize()),
        requestDeserialize: (bytes: Buffer) =>
          GetChatMsg.deserialize(new Uint8Array(bytes)),
        responseSerialize: (message: ChatMsg) =>
          Buffer.from(message.serialize()),
        responseDeserialize: (bytes: Buffer) =>
          ChatMsg.deserialize(new Uint8Array(bytes)),
      },
    };
    [method: string]: grpc_1.UntypedHandleCall;
    abstract SendMsgTest(
      call: grpc_1.ServerUnaryCall<
        TestMsg,
        dependency_1.google.protobuf.StringValue
      >,
      callback: grpc_1.sendUnaryData<dependency_1.google.protobuf.StringValue>,
    ): void;
    abstract SendMsg(
      call: grpc_1.ServerUnaryCall<
        ChatMsg,
        dependency_1.google.protobuf.StringValue
      >,
      callback: grpc_1.sendUnaryData<dependency_1.google.protobuf.StringValue>,
    ): void;
    abstract GetMsgTest(
      call: grpc_1.ServerUnaryCall<GetTestMsg, TestMsg>,
      callback: grpc_1.sendUnaryData<TestMsg>,
    ): void;
    abstract GetMsg(
      call: grpc_1.ServerUnaryCall<GetChatMsg, ChatMsg>,
      callback: grpc_1.sendUnaryData<ChatMsg>,
    ): void;
  }
  export class ChatClient extends grpc_1.makeGenericClientConstructor(
    UnimplementedChatService.definition,
    'Chat',
    {},
  ) {
    constructor(
      address: string,
      credentials: grpc_1.ChannelCredentials,
      options?: Partial<grpc_1.ChannelOptions>,
    ) {
      super(address, credentials, options);
    }
    SendMsgTest: GrpcUnaryServiceInterface<
      TestMsg,
      dependency_1.google.protobuf.StringValue
    > = (
      message: TestMsg,
      metadata:
        | grpc_1.Metadata
        | grpc_1.CallOptions
        | grpc_1.requestCallback<dependency_1.google.protobuf.StringValue>,
      options?:
        | grpc_1.CallOptions
        | grpc_1.requestCallback<dependency_1.google.protobuf.StringValue>,
      callback?: grpc_1.requestCallback<dependency_1.google.protobuf.StringValue>,
    ): grpc_1.ClientUnaryCall => {
      return super.SendMsgTest(message, metadata, options, callback);
    };
    SendMsg: GrpcUnaryServiceInterface<
      ChatMsg,
      dependency_1.google.protobuf.StringValue
    > = (
      message: ChatMsg,
      metadata:
        | grpc_1.Metadata
        | grpc_1.CallOptions
        | grpc_1.requestCallback<dependency_1.google.protobuf.StringValue>,
      options?:
        | grpc_1.CallOptions
        | grpc_1.requestCallback<dependency_1.google.protobuf.StringValue>,
      callback?: grpc_1.requestCallback<dependency_1.google.protobuf.StringValue>,
    ): grpc_1.ClientUnaryCall => {
      return super.SendMsg(message, metadata, options, callback);
    };
    GetMsgTest: GrpcUnaryServiceInterface<GetTestMsg, TestMsg> = (
      message: GetTestMsg,
      metadata:
        | grpc_1.Metadata
        | grpc_1.CallOptions
        | grpc_1.requestCallback<TestMsg>,
      options?: grpc_1.CallOptions | grpc_1.requestCallback<TestMsg>,
      callback?: grpc_1.requestCallback<TestMsg>,
    ): grpc_1.ClientUnaryCall => {
      return super.GetMsgTest(message, metadata, options, callback);
    };
    GetMsg: GrpcUnaryServiceInterface<GetChatMsg, ChatMsg> = (
      message: GetChatMsg,
      metadata:
        | grpc_1.Metadata
        | grpc_1.CallOptions
        | grpc_1.requestCallback<ChatMsg>,
      options?: grpc_1.CallOptions | grpc_1.requestCallback<ChatMsg>,
      callback?: grpc_1.requestCallback<ChatMsg>,
    ): grpc_1.ClientUnaryCall => {
      return super.GetMsg(message, metadata, options, callback);
    };
  }
}
